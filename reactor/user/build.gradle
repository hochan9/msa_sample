plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'io.freefair.lombok' version "${lombokPluginVersion}"
}

java {
    sourceCompatibility = "${javaVersion}"
}

dependencies {
    implementation project(":reactor:lib")
    // 공통적으로 사용될 의존성
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor:reactor-core'
    testImplementation 'io.projectreactor:reactor-test'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly 'org.mariadb:r2dbc-mariadb'
    testRuntimeOnly 'io.r2dbc:r2dbc-h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // 맥 관련 옵션
    if (isAppleSilicon()) {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def boolean isAppleSilicon() {
    return System.getProperty("os.name").contains("Mac") && System.getProperty("os.arch").equals("aarch64")
}